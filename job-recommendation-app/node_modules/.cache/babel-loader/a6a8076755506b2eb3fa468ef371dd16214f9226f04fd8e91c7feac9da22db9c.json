{"ast":null,"code":"var _jsxFileName = \"D:\\\\JTP\\\\job-recommendation-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Container, Form, Button, ListGroup } from 'react-bootstrap'; // Import React Bootstrap components\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [recommendedJobs, setRecommendedJobs] = useState([]);\n  const handleSearch = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/recommend', {\n        title\n      });\n      setRecommendedJobs(response.data);\n    } catch (error) {\n      console.error('Error fetching recommendations:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-4\",\n      children: \"Job Recommendation System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"searchJob\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Search for a Job Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSearch,\n        children: \"Get Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      className: \"mt-4\",\n      children: recommendedJobs.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Recommended Jobs:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), recommendedJobs.map((job, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: job\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No recommendations found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vvveCGf8K0QkFQQ2vMl4Bhq49Ao=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","Container","Form","Button","ListGroup","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","title","setTitle","recommendedJobs","setRecommendedJobs","handleSearch","response","post","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","value","onChange","e","target","variant","onClick","length","map","job","index","Item","_c","$RefreshReg$"],"sources":["D:/JTP/job-recommendation-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Container, Form, Button, ListGroup } from 'react-bootstrap'; // Import React Bootstrap components\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Import Bootstrap CSS\n\nfunction App() {\n  const [title, setTitle] = useState('');\n  const [recommendedJobs, setRecommendedJobs] = useState([]);\n\n  const handleSearch = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/recommend', { title });\n      setRecommendedJobs(response.data);\n    } catch (error) {\n      console.error('Error fetching recommendations:', error);\n    }\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <h1 className=\"mb-4\">Job Recommendation System</h1>\n      <Form>\n        <Form.Group controlId=\"searchJob\">\n          <Form.Label>Search for a Job Title:</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        </Form.Group>\n        <Button variant=\"primary\" onClick={handleSearch}>\n          Get Recommendations\n        </Button>\n      </Form>\n      <ListGroup className=\"mt-4\">\n        {recommendedJobs.length > 0 ? (\n          <>\n            <h3>Recommended Jobs:</h3>\n            {recommendedJobs.map((job, index) => (\n              <ListGroup.Item key={index}>{job}</ListGroup.Item>\n            ))}\n          </>\n        ) : (\n          <p>No recommendations found.</p>\n        )}\n      </ListGroup>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}